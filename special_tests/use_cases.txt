rotate/shear (per texture):
- set increments (now: DC=2, ADDR=0) ==> (DC=3, ADDR=0)

rotate/shear (per row):
- reset subpixel position (now: DC=2, ADDR=0) ==> (DC=3, ADDR=0)
    -> FIXME: you want to do this DURING position change!
- set ADDR0 (ADDR=0)
- set position (DC=2, ADDR=1) ==> SAME
    ==> PROBLEM: now also includes subpixel position[0] -> ora ....,x -> so this will UNDO the reset!
- read/write DATA1/DATA0


line draw (once):
- set autoincrement of ADDR0 (ADDR=0)
- set FX mode to line draw (DC=3, ADDR=0) ==> (DC=2, ADDR=0)

line draw (per line):
- set ADDR1 (ADDR=1)
- set increments (now: DC=2, ADDR=0) ==> (DC=3, ADDR=0)
   - reset subpixel position  (now: DC=2, ADDR=0) ==> (DC=3, ADDR=0)
     -> FIXME: if possible, you dont want to switch from ADDR=1 and ADDR=0 when changeing the incrment
- write to DATA1

perspective (once):
- set base tile and map addresses (DC=3, ADDR=0)
- set FX mode, settings (DC=3, ADDR=0) ==> (DC=2, ADDR=0)
- set increments (now: DC=2, ADDR=0) ==> (DC=3, ADDR=0)
    -> FIXME: there is probably no need to this this anymore here?
perspective (per row):
- set ADDR0 (ADDR=0)
- set sub pixel positions (now: DC=2, ADDR=0 -> with COPY!) -> FIXME: you want to set these explicitly, not overwriting the icnrements
- set increments (now: DC=2, ADDR=0) ==> (DC=3, ADDR=0)
- set position (DC=2, ADDR=1) ==> SAME
  - reset cache byte index (now: DC=2, ADDR=1)
- read/write DATA1/DATA0


polygon filler (per triangle):
- set ADDR0 to left side of the screen (ADDR=0)
- set FX mode to polygon filler, settings (DC=3, ADDR=0) ==> (DC=2, ADDR=0)
- set x1, x2 positions (DC=2, ADDR=1) ==> SAME
- set autoincrement of ADDR1 (ADDR=1)  --> POSSIBLE PROBLEM: bit16 is set! But its not during the triangle draw... 
polygon filler (per triangle-part):
- set increments (now: DC=2, ADDR=0) ==> (DC=3, ADDR=0)
  - reset the subpixel positions (now: DC=2, ADDR=0) -> NOTICE: do we WANT that for both parts of just the first one?
polygon filler (per hor line):
- read DATA0
- read DATA1
- jump table
  - possibly read line_length_div_4 (now: DC=3, ADDR=1)
  - write DATA1
  - switch wrpattern (ADDR=1)




