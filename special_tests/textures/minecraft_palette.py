
# Original textures searched by "8x8 textures" (dont know which one exactly anymore)
# Merge texture images into 1 image: https://www.filesmerge.com/merge-images
# Convert images to 256 colors: https://redketchup.io/image-converter/help
# Then did this: https://lvgl.io/tools/imageconverter  (CF_INDEXED_8_BIT, to c-array, no extra options selected) -> minecraft_8x128.c
# Copy pasted the pixel bytes (first replaced 0x with $ in notepad++, add ".byte" and remove trailing comma) directly into assembly
# and copy-pasted the palette bytes below. NOTE: removed the 4th column containing the ALPHA bytes! (use Alt + mouse)
# This generates the (packed) palette bytes we need in assembly

# NOTE: 
paletteBytes = [
  0xb4, 0xb4, 0xb4,
  0x99, 0x99, 0x99,
  0x4c, 0x4c, 0x4c,
  0xac, 0xb6, 0xd9,
  0x98, 0x9d, 0xd4,
  0x95, 0xa0, 0xc1,
  0xa3, 0xa3, 0xa4,
  0x93, 0x9b, 0xb9,
  0x84, 0x88, 0xbe,
  0x8a, 0x8a, 0x8b,
  0x72, 0x73, 0xbd,
  0x73, 0x77, 0x9b,
  0x6c, 0x6c, 0xb8,
  0x78, 0x78, 0x79,
  0x65, 0x64, 0xaf,
  0x60, 0x60, 0xa2,
  0x63, 0x67, 0x83,
  0x6a, 0x6a, 0x6b,
  0x55, 0x5a, 0x8f,
  0x55, 0x55, 0x96,
  0x58, 0x5b, 0x78,
  0x4e, 0x50, 0x80,
  0x47, 0x47, 0x92,
  0x47, 0x47, 0x83,
  0x3f, 0x3f, 0x9b,
  0x42, 0x42, 0x8e,
  0x0c, 0x26, 0xe3,
  0x3c, 0x3c, 0x87,
  0x38, 0x38, 0x94,
  0x0d, 0x26, 0xdd,
  0x3e, 0x3e, 0x7b,
  0x3f, 0x3f, 0x6e,
  0x0b, 0x24, 0xd2,
  0x0b, 0x23, 0xca,
  0x2a, 0x2a, 0x9d,
  0x2e, 0x2d, 0x91,
  0x0b, 0x22, 0xc0,
  0x34, 0x34, 0x73,
  0x34, 0x34, 0x65,
  0x0a, 0x1f, 0xb5,
  0x2b, 0x2b, 0x80,
  0x33, 0x33, 0x5a,
  0x2a, 0x2a, 0x6e,
  0x09, 0x1c, 0xa8,
  0x08, 0x1b, 0xa0,
  0x2a, 0x2a, 0x5b,
  0x2b, 0x2a, 0x51,
  0x07, 0x18, 0x97,
  0x2b, 0x2b, 0x48,
  0x22, 0x21, 0x68,
  0x24, 0x24, 0x56,
  0x22, 0x22, 0x5c,
  0x07, 0x15, 0x8b,
  0x1d, 0x1c, 0x64,
  0x23, 0x23, 0x46,
  0x1b, 0x1b, 0x5f,
  0x06, 0x11, 0x80,
  0x21, 0x21, 0x3f,
  0x1c, 0x1c, 0x50,
  0x06, 0x10, 0x79,
  0x14, 0x14, 0x63,
  0x1d, 0x1d, 0x38,
  0x05, 0x0d, 0x70,
  0x12, 0x12, 0x4b,
  0x0d, 0x0b, 0x5e,
  0x15, 0x13, 0x39,
  0x0c, 0x0c, 0x4b,
  0x0d, 0x0d, 0x41,
  0x11, 0x11, 0x2f,
  0x07, 0x06, 0x42,
  0x0c, 0x0c, 0x29,
  0x00, 0x00, 0x32,
  0x01, 0x00, 0x22,
  0xec, 0xf9, 0xfb,
  0xe2, 0xf0, 0xf9,
  0xde, 0xe7, 0xe9,
  0xbc, 0xe8, 0xf0,
  0xb7, 0xe2, 0xea,
  0xce, 0xde, 0xed,
  0xb0, 0xdd, 0xe6,
  0x4a, 0xdf, 0xff,
  0xab, 0xd9, 0xe1,
  0x3c, 0xdb, 0xf7,
  0x45, 0xda, 0xf2,
  0xc1, 0xd0, 0xe5,
  0x38, 0xd5, 0xfd,
  0xa1, 0xd3, 0xda,
  0x9a, 0xd2, 0xda,
  0x9e, 0xd0, 0xd6,
  0x96, 0xce, 0xd5,
  0x31, 0xcd, 0xfa,
  0xbd, 0xc8, 0xd1,
  0x8d, 0xc9, 0xd1,
  0x46, 0xc9, 0xe8,
  0x32, 0xc8, 0xef,
  0x2d, 0xc1, 0xf5,
  0xb2, 0xbc, 0xc7,
  0xa3, 0xb4, 0xbc,
  0x4e, 0xad, 0xc5,
  0x7e, 0xa8, 0xad,
  0x4d, 0xa1, 0xc7,
  0x5f, 0xa3, 0xb4,
  0x7d, 0xa2, 0xaa,
  0x6d, 0x9e, 0xb1,
  0x65, 0x94, 0xc2,
  0x93, 0x97, 0x9f,
  0x89, 0x93, 0xa5,
  0x61, 0x97, 0xa2,
  0x60, 0x8f, 0xba,
  0x87, 0x8d, 0x98,
  0x63, 0x90, 0x9a,
  0x5a, 0x88, 0xb2,
  0x57, 0x86, 0xae,
  0x53, 0x87, 0xa7,
  0x82, 0x83, 0x84,
  0x61, 0x7c, 0x94,
  0x6d, 0x76, 0x88,
  0x4e, 0x71, 0x9d,
  0x4a, 0x6c, 0x97,
  0x53, 0x6b, 0x8b,
  0x6c, 0x6f, 0x72,
  0x51, 0x69, 0x87,
  0x46, 0x66, 0x8f,
  0x44, 0x63, 0x8b,
  0x41, 0x5f, 0x86,
  0x34, 0x62, 0x7e,
  0x4a, 0x60, 0x7c,
  0x3f, 0x5c, 0x82,
  0x48, 0x5c, 0x78,
  0x3e, 0x5a, 0x7e,
  0x32, 0x5d, 0x77,
  0x5c, 0x5d, 0x5f,
  0x46, 0x58, 0x70,
  0x39, 0x55, 0x79,
  0x2e, 0x55, 0x6c,
  0x35, 0x4e, 0x6f,
  0x31, 0x49, 0x68,
  0x24, 0x4b, 0x63,
  0x3d, 0x47, 0x55,
  0x2c, 0x40, 0x5d,
  0x16, 0x2f, 0x49,
  0x14, 0x2c, 0x45,
  0x11, 0x25, 0x3b,
  0xa2, 0xff, 0xff,
  0xb7, 0xfb, 0xff,
  0x75, 0xff, 0xff,
  0x6c, 0xfe, 0xfe,
  0x5e, 0xfe, 0xff,
  0x55, 0xfb, 0xff,
  0x4b, 0xfa, 0xff,
  0x42, 0xfb, 0xfb,
  0x48, 0xf5, 0xff,
  0x41, 0xf1, 0xfe,
  0x51, 0xef, 0xfe,
  0x63, 0xec, 0xf6,
  0x5b, 0xea, 0xf6,
  0x4e, 0xea, 0xf6,
  0x48, 0xe5, 0xf6,
  0x38, 0xe2, 0xf4,
  0x6e, 0xdf, 0xde,
  0xb6, 0xd7, 0xd6,
  0x5f, 0xd9, 0xd7,
  0x67, 0xd8, 0xd7,
  0x64, 0xd2, 0xd2,
  0x80, 0xc8, 0xcf,
  0x5b, 0xcc, 0xcb,
  0x55, 0xc3, 0xc3,
  0x4e, 0xba, 0xb9,
  0x74, 0xb0, 0xb4,
  0x53, 0xb3, 0xb3,
  0x4c, 0xb0, 0xb0,
  0x92, 0xa5, 0xa6,
  0x4c, 0xa9, 0xa9,
  0x92, 0x93, 0x93,
  0x73, 0x74, 0x74,
  0x63, 0x65, 0x65,
  0x57, 0x58, 0x58,
  0x73, 0x9f, 0x73,
  0x7f, 0x8b, 0x7f,
  0x6f, 0x8e, 0x6f,
  0x7a, 0x85, 0x7a,
  0x67, 0x8a, 0x67,
  0x72, 0x80, 0x72,
  0x5b, 0x86, 0x5b,
  0x6f, 0x7e, 0x6f,
  0x64, 0x7c, 0x64,
  0x57, 0x7f, 0x57,
  0x69, 0x75, 0x69,
  0x60, 0x74, 0x60,
  0x5b, 0x6a, 0x5b,
  0x48, 0x70, 0x48,
  0x54, 0x67, 0x54,
  0x4e, 0x69, 0x4e,
  0x37, 0x71, 0x37,
  0x4c, 0x5f, 0x4c,
  0x42, 0x5b, 0x42,
  0x40, 0x55, 0x40,
  0x37, 0x58, 0x37,
  0x2b, 0x53, 0x2b,
  0x35, 0x46, 0x35,
  0xc3, 0xb4, 0xac,
  0x7d, 0x75, 0x73,
  0x87, 0x6b, 0x63,
  0x75, 0x65, 0x63,
  0x71, 0x5f, 0x5b,
  0x0b, 0x08, 0x07,
  0xa1, 0x95, 0x94,
  0x8a, 0x83, 0x83,
  0x7f, 0x7e, 0x7e,
  0x71, 0x6f, 0x6f,
  0x4b, 0x29, 0x34,
  0x44, 0x25, 0x2f,
  0x38, 0x20, 0x27,
  0x2e, 0x1a, 0x20,
  0x25, 0x15, 0x19,
  0x20, 0x13, 0x15,
  0x1c, 0x10, 0x12,
  0x14, 0x0c, 0x0c,
  0xb0, 0xac, 0xb0,
  0xaf, 0xaa, 0xaf,
  0xae, 0x7e, 0xb3,
  0xa9, 0x79, 0xae,
  0xba, 0x94, 0xc0,
  0xb5, 0x8b, 0xbb,
  0xb1, 0x86, 0xb6,
  0xac, 0x83, 0xb3,
  0xa5, 0x7d, 0xab,
  0xa1, 0x74, 0xa8,
  0x9f, 0x73, 0xa7,
  0x99, 0x6f, 0x9f,
  0x94, 0x6b, 0x9b,
  0x90, 0x69, 0x97,
  0x8b, 0x66, 0x94,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
  0x00, 0x00, 0x00,
]

index = 0
nrOfBytes = len(paletteBytes)

paletteString = ""

while (index < nrOfBytes):
    blue = paletteBytes[index]
    blue = blue & 0xF0
    blue = blue >> 4
    index += 1
    # print(hex(blue))
    
    green = paletteBytes[index]
    green = green & 0xF0
    index += 1
    # print(hex(green))
    # print(format(blue | green,"02x"))
    
    red = paletteBytes[index]
    red = red & 0xF0
    red = red >> 4
    index += 1
    # print(format(red,"02x"))
    paletteString += "  .byte "
    paletteString += "$" + format(green | blue,"02x") + ", "
    paletteString += "$" + format(red,"02x")
    paletteString += "\n"

print(paletteString)
